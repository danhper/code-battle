task :prepare do
  invoke 'prepare:default'
end

namespace :prepare do
  task :default do
    invoke 'prepare:create_deploy_dir'
    invoke 'prepare:check_permissions'
    invoke 'prepare:create_deploy_subdirectories'
    invoke 'prepare:upload_local_config'
    invoke 'prepare:install_backup_gems'
  end

  desc "Create the deploy directory if needed"
  task :create_deploy_dir do
    on roles(:all) do |host|
      if test("[ ! -d #{fetch(:deploy_to)} ]")
        if test("mkdir -p #{fetch(:deploy_to)}")
          info "Created directory #{fetch(:deploy_to)} on #{host}"
        else
          error "Could not create #{fetch(:deploy_to)} on #{host}"
        end
      end
    end
  end

  desc "Check that we can access everything"
  task :check_permissions do
    on roles(:all) do |host|
      if test("[ -w #{fetch(:deploy_to)} ]")
        info "#{fetch(:deploy_to)} is writable on #{host}"
      else
        error "#{fetch(:deploy_to)} is not writable on #{host}"
      end
    end
  end

  desc "Create deploy subdirectories"
  after :check_permissions, :create_deploy_subdirectories do
    on roles(:all) do |host|
      if test("[ ! -d #{shared_path}/config/settings ]")
        info "Created #{shared_path}/config/settings"
        execute :mkdir, "-p #{shared_path}/config/settings"
      end
    end
  end

  desc "Upload local settings"
  task :upload_local_config do
    on roles(:all) do |host|
      fetch(:linked_files).each do |f|
        if File.basename(f).include? "production"
          source = f.sub "production", fetch(:stage).to_s
        else
          source = f
        end
        upload! source, "#{shared_path}/#{f}"
      end
    end
  end

  desc "Install backup gems"
  task :install_backup_gems do
    on roles(:db) do |host|
      dir = "#{fetch(:tmp_dir)}/gem-install-#{Time.now.to_i}"
      execute :mkdir, "-p #{dir}"
      upload! "config/backup/Gemfile", dir
      info "Installing backup gems"
      execute :bundle, "install --gemfile=#{dir}/Gemfile"
      execute :rm, "-r #{dir}"
    end
  end

  desc "Seed DB"
  task :seed_db do
    on roles(:db) do |host|
      within release_path do
        execute :rake, 'db:seed', "RAILS_ENV=#{fetch(:rails_env)}"
      end
    end
  end

end
