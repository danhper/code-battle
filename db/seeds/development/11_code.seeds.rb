Code.create!(user_id: 1, guild_id: 1, quest_id: 1, source: "<?php\nfunction eratosthenes5($max) {\n    $sqrt = floor(sqrt($max));\n    $lists = array_fill(2, $max-1, true);\n    for ($i=2; $i<=$sqrt; $i++) {\n        if (isset($lists[$i])) {\n            for ($j=$i*2; $j<=$max; $j+=$i) {\n                unset($lists[$j]);\n            }\n        }\n    }\n    return array_keys($lists);\n}\nprint_r(eratosthenes5(10000));")
Code.create!(user_id: 2, guild_id: 2, quest_id: 2, source: "fibonacci")
Code.create!(user_id: 2, guild_id: 2, quest_id: 3, source: "dijakstra")
Code.create!(user_id: 6, guild_id: 6, quest_id: 4, source: "overflow")
Code.create!(user_id: 6, guild_id: 6, quest_id: 5, source: "bfs")
Code.create!(user_id: 5, guild_id: 5, quest_id: 6, source: "dfs")
Code.create!(user_id: 5, guild_id: 5, quest_id: 7, source: "dp")
Code.create!(user_id: 4, guild_id: 4, quest_id: 8, source: "max_flow")
Code.create!(user_id: 4, guild_id: 4, quest_id: 9, source: "MST")
Code.create!(user_id: 4, guild_id: 4, quest_id: 10, source: "Unionfind")

Code.create!(user_id: 2, guild_id: 2, quest_id: 1, source: "from itertools import ifilter, count\ndef prime_generator():\n  g = count(2)\n  while True:\n    prime = g.next()\n    yield prime\n    g = ifilter(lambda x, prime=prime: x%prime, g)\nfor pr in prime_generator():\n  print pr")
Code.create!(user_id: 3, guild_id: 3, quest_id: 1, source: "require 'Prime'\nPrime.each(10000){|i| p i}\n")
Code.create!(user_id: 4, guild_id: 4, quest_id: 1, source: "my @primes;\nfor my $num ( 2..1000 ) {\n    push @primes, $num if (1 x $num) !~ /^(11+)\1+$/;\n}\nprint join q{ }, @primes;\n")
Code.create!(user_id: 5, guild_id: 5, quest_id: 1, source: "sieve (x:xs) = x : sieve [n | n <- xs, x `mod` /=0]")
Code.create!(user_id: 6, guild_id: 6, quest_id: 1, source: "object Sieve {\n  def sieve(xs: List[Int]): List[Int] =\n    if (xs.isEmpty)\n      Nil\n    else\n      xs.head :: sieve(xs.tail.filter(_ % xs.head != 0))\n  def primes(n: Int) = sieve(Range(2, n).toList)\n  def main(args: Array[String]) {\n    primes(100).foreach { println }\n  }\n}\n")
Code.create!(user_id: 7, guild_id: 7, quest_id: 1, source: "class PrimeNumber3 {\n  public static void main(String[] args) {\n    long start = System.currentTimeMillis();\n    int[] prime = new int[500000];\n    prime[ptr++] = 2;\n    prime[ptr++] = 3;\n    for (int n = 5; n <= 100000; n += 2) {\n      boolean wflag = false;\n      for (int i = 1; prime[i] * prime[i] <= n; i++) {\n        counter +=2;\n        if (0 == n % prime[i]) {\n          wflag = true;\n          break;\n        }\n      }\n      if (!wflag) {\n        prime[ptr++] = n;\n        counter++;\n      }\n    }\n    for (int i = 0; i < ptr; i++)\n      System.out.println(prime[i]);\n  }\n}")
